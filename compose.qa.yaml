# the file contains several profiles for running tests with NGINX either locally or in AWS
# profiles (scenarios):
#
# - local: for testing QA setup locally, spins up local db, otherwise same
# - aws: for QA in AWS, db handled externally
# - *mock-builder: build mock frontend artifacts

# run with: docker compose -f compose.yaml -f compose.qa.yaml --profile [[profile]] up


# base mock frontend, for reuse in several scenarios
x-frontend-base: &frontend-base
  build:
    context: ./mock_frontend/shallwe
  volumes:
    - ./mock_frontend/shallwe:/app      # mount code for hot reload
    - /app/node_modules                 # separate container's node_modules from host to avoid mutual overrides
    - mock_build:/app/.next             # ^ same
  env_file:
    - path: .env
      required: false
    - path: .env.local
      required: false
  environment:
    NEXT_PUBLIC_SHALLWE_ENV_MODE: ${NEXT_PUBLIC_SHALLWE_ENV_MODE:?}
    NEXT_PUBLIC_SHALLWE_OAUTH_CLIENT_ID: ${NEXT_PUBLIC_SHALLWE_OAUTH_CLIENT_ID:?}
    NEXT_PUBLIC_SHALLWE_OAUTH_REDIRECT_URI: ${NEXT_PUBLIC_SHALLWE_OAUTH_REDIRECT_URI:?}
    NEXT_PUBLIC_SHALLWE_API_BASE_URL_EXTERNAL: ${NEXT_PUBLIC_SHALLWE_API_BASE_URL_EXTERNAL}
    NEXT_PUBLIC_SHALLWE_API_BASE_URL_INTERNAL: http://backend:8000
    NEXT_PUBLIC_SHALLWE_SKIP_MIDDLEWARE: ${NEXT_PUBLIC_SHALLWE_SKIP_MIDDLEWARE:?}
  ports:
    - "3000:3000"


services:

  # nginx setup
  nginx:
    image: nginx:1.25-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
      - frontend-run
    ports:
      - "8080:80"  # prevents from clashing with host nginx if running
    profiles:
      - local
      - public


  # spin up db if local
  db:
    image: postgres:16.9-alpine
    volumes:
      - db_data:/var/lib/postgresql/data
    env_file:
      - path: .env
        required: false
      - path: .env.local
        required: false
    environment:
      POSTGRES_USER: ${SHALLWE_BACKEND_DB_USER:?}
      POSTGRES_PASSWORD: ${SHALLWE_BACKEND_DB_PASS:?}
      POSTGRES_DB: ${SHALLWE_BACKEND_DB_NAME:?}
    ports:
      - "5434:${SHALLWE_BACKEND_DB_PORT}"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${SHALLWE_BACKEND_DB_USER}" ]
      interval: 5s
      retries: 5
    restart: always
    profiles:
      - local


  # backend overrides for qa
  backend:
    build:
      context: ./shallwe_core           # builds locally
    volumes:
      - ./shallwe_core:/app             # mount code for hot reload
      - staticfiles:/app/staticfiles    # separate container's static from host to avoid mutual overrides
      - media:/app/media                # ^ same
      - django_logs:/tmp/django         # persistent logs for debug
    depends_on:
      db:
        condition: service_healthy
    environment:
      SHALLWE_BACKEND_DB_HOST: db       # override to talk to db container
    profiles:
      - local
      - public


  # mock frontend:
  # step 1. build artifacts (once after change)
  frontend-builder:
    <<: *frontend-base
    command: npm run build
    profiles:
      - mock-builder

  # step 2. run a preserved build
  frontend-run:
    <<: *frontend-base
    command: npm run start
    depends_on:
      - backend
    profiles:
      - local
      - public


volumes:
  db_data:
  media:
  staticfiles:
  django_logs:
  mock_build:
