"""
Django settings for shallwe_core project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Import build-specific variables and secrets (DO NOT SHARE ON GITHUB)
from .build_config import *

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = SHALLWE_CONF_SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


ALLOWED_HOSTS = [*SHALLWE_CONF_ALLOWED_HOSTS]

CSRF_TRUSTED_ORIGINS = [*SHALLWE_CONF_CSRF_TRUSTED_ORIGINS]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'dj_rest_auth',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'dj_rest_auth.registration',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'shallwe_auth',
    'shallwe_app',
    'shallwe_locations',
    'shallwe_facecheck'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'shallwe_core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


# Add the directory where React build files are located to STATICFILES_DIRS
STATICFILES_DIRS = []

# Define the directory where Django collects static files
STATIC_ROOT = BASE_DIR / 'staticfiles'


WSGI_APPLICATION = 'shallwe_core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': SHALLWE_CONF_DB_NAME,
        'USER': SHALLWE_CONF_DB_USER,
        'PASSWORD': SHALLWE_CONF_DB_PASS,
        'HOST': SHALLWE_CONF_DB_HOST or 'localhost',
        'PORT': SHALLWE_CONF_DB_PORT or '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Rest Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',    # for utilising Token-Based auth in REST endpoints
    ],
}


# Authentication Backends
AUTHENTICATION_BACKENDS = [
    'allauth.account.auth_backends.AuthenticationBackend',
]


# Django Allauth Settings
SITE_ID = 1
ACCOUNT_EMAIL_VERIFICATION = 'none'
SOCIALACCOUNT_PROVIDERS = {
   'google': {
       'SCOPE': [
           'openid',  # Only include 'openid' scope for retrieving Google Account ID
       ],
       'AUTH_PARAMS': {
           'access_type': 'online',
       },
       'APP': {
           'client_id': SHALLWE_CONF_OAUTH_CLIENT_ID,
           'secret': SHALLWE_CONF_OAUTH_CLIENT_SECRET
       }
   }
}


# Shallwe locations setting
DEFAULT_KATOTTG_CSV_PATH = BASE_DIR / 'shallwe_locations' / 'locations_src' / 'katottg.csv'


# Mode-specific settings
SHALLWE_BACKEND_MODE = SHALLWE_CONF_ENV_MODE
frontend_dir = 'mock_frontend' if SHALLWE_BACKEND_MODE in ['DEV', 'QA'] else 'frontend'

TEMPLATES[0]['DIRS'] += [
    BASE_DIR / frontend_dir,
]
STATICFILES_DIRS += [
    BASE_DIR / frontend_dir / 'static',
]

# For database schema
if SHALLWE_BACKEND_MODE == 'DEV':
    INSTALLED_APPS.append('django_extensions')
